calculate_limited_construction_demand = {
	value = var:nominal_construction_demand
	#set maximum usage to just over double the supply
	max = {
		value = var:national_production
		multiply = 2
		multiply = 1.05
		divide = 10
		min = 10
	}
}

#Calculate construction while ignoring supply limit
calculate_nominal_construction = {
	if = {
		limit = {
			has_law = law_type:law_command_economy
		}
		value = income
		multiply = 1.5 #allow more spending than income, but not too much. TODO: test and choose a better value
	}
	else = {
		value = investment_pool_gross_income
		add = var:max_government_construction_spending
	}
	divide = construction_point_price
}

#price of each construction point is 10 goods
construction_point_price = {
	value = construction_good_price
	multiply = 10
}

construction_good_price = {
	value = 95 #base price of construction good
	if = {
		#make sure that construction has been calculated once before to avoid assuming construction cost is -75%
		limit = {
			game_date > 1836.1.5
		}
		multiply = {
			value = 1
			add = construction_price_multiplier
		}
	}
}

#calculate estimated national construction price multiplier based on formula: https://vic3.paradoxwikis.com/Market#Market_price
construction_price_multiplier = {
	value = 0.75
	multiply = {
		value = {
			value = var:national_consumption
			subtract = var:national_production
			divide = {
				value = var:national_consumption
				max = var:national_production
				min = 1
			}
		}
		#clamp between 1 and -1
		max = 1
		min = -1
	}
}

construction_state_price_multiplier = {
	value = 0.75
	multiply = {
		value = {
			value = var:national_consumption
			subtract = var:national_production
			divide = {
				value = var:national_consumption
				max = var:national_production
				min = 1
			}
		}
		#clamp between 1 and -1
		max = 1
		min = -1
	}
}

national_construction_production = {
	every_scope_state = {
		sg:construction = {
			add = state_goods_production 
		}
	}
}

national_construction_consumption = {
	every_scope_state = {
		sg:construction = {
			add = state_goods_consumption 
		}
	}
}

state_construction_allocation = {
	owner = {
		value = var:limited_construction_demand
	}
	owner = {
		divide = {
			value = var:national_production
			divide = 10
			min = 0.1
		}
	}
	max = 2.05 # demand only a limited amount more than is possible in this state

	if = {
		limit = {
			sg:construction = {
				state_goods_production = 0
			}
		}
		value = local_var:remaining_construction_demand
		multiply = 0.5
	}
	else = {
		sg:construction = {
			multiply = state_goods_production
			divide = 10
		}
	}
	min = 3
	max = local_var:remaining_construction_demand
}
construction_ordering = {
	sg:construction = {
		value = state_goods_production
		multiply = 100
	}
	add = {
		value = gdp
		owner = {
			divide = gdp
		}
	}
}

calculate_max_government_construction_spending = {
	value = 1
	subtract = modifier:country_private_construction_allocation_mult
	multiply = investment_pool_gross_income
	if = {
		limit = {
			OR = {
				is_construction_paused = yes
				construction_queue_num_queued_government_levels = 0 
			}
		}
		value = 0
	}
}

calculate_total_construction_spending = {
	value = 0
	every_scope_state = {
		sg:construction = {
			add = {
				value = state_goods_consumption
				multiply = 95
				multiply = {
					value = 1
					add = state_goods_pricier
				}
			}
		}
	}
}

calculate_government_construction_spending = {
	value = calculate_total_construction_spending
	#subtract private spending
	subtract = {
		value = investment_pool_gross_income
		subtract = investment_pool_net_income
	}
	max = var:max_government_construction_spending
	min = 0
}


private_construction_increase = {
	value = 1
	multiply = {
		value = 1
		subtract = var:construction_spending_level
	}
	multiply = {
		value = 1
		add = var:prev_construction_allocation
		subtract = modifier:country_private_construction_allocation_mult
	}
}
